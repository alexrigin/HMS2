<Window x:Class="HMS.DataGrid"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:HMS="clr-namespace:HMS" 
        xmlns:converters="clr-namespace:HMS_Converters"
        xmlns:converter="clr-namespace:HMS.Converters"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        Title="Temp" Height="Auto" Width="Auto">
    <Window.Resources>
        <CollectionViewSource x:Key="ItemCollectionViewSource" CollectionViewType="ListCollectionView"/>
        <converters:QuantityToBackgroundConverter x:Key="QuantityToBackgroundConverter"/>
        <converters:QuantityToForegroundConverter x:Key="QuantityToForegroundConverter"/>
        <converters:IsObsoleteToTextDecorationsConverter x:Key="IsObsoleteToTextDecorationsConverter"/>
        <converter:VisbilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>



        <DataTemplate x:Key="ExpandDetails">
            <ToggleButton x:Name="ShowDetails" 
                              IsChecked="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, 
                                                  Path=DetailsVisibility, 
                                                  Converter={StaticResource VisibilityToBooleanConverter}, 
                                                  Mode=TwoWay}" 
                              Margin="4" />
        </DataTemplate>

        <Style x:Key="QuantityStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="Foreground" 
              Value="{Binding 
                RelativeSource={RelativeSource Self}, 
                Path=Text, 
                Converter={StaticResource QuantityToForegroundConverter}}" />
            <Setter Property="TextDecorations" 
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, 
                    Path =Item.IsObsolete, 
                    Converter={StaticResource IsObsoleteToTextDecorationsConverter}}" />
        </Style>


    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
            <TextBlock Text="Memory Usage:" Margin="5" VerticalAlignment="Center"/>
            <TextBlock x:Name="tbMemory" Margin="5" Width="80" VerticalAlignment="Center"/>
            <Button  Name="btn1" Content="LoadArticles" Click="btn1_Click"  ></Button>
            <TextBlock Text="Поиск" Margin="5" Width="Auto" VerticalAlignment="Center"/>
            <TextBox Name="Поиск" Margin="5" Width="80" TextChanged="Поиск_TextChanged"></TextBox>

        </StackPanel>

        <DataGrid Name="DataGrid1" 
            Grid.Row="3"
            Margin="10,10,10,10"
            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Data}" 
            ItemsSource="{Binding}"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            IsSynchronizedWithCurrentItem="True">
            <!--DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Item.Quantity, Converter={StaticResource QuantityToBackgroundConverter}}"></Setter>
                </Style>
            </-->

            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Data.Id}" Header="Id" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.Name}" Header="Name" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.Number}" Header="Number" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MinHeight}" Header="MinH1" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MaxHeight}" Header="MaxH1" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MinSeamerHeight}" Header="MinH2" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MaxSeamerHeight}" Header="MaxH2" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MinDiameter}" Header="MinD" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.MaxDiameter}" Header="MaxD" FontWeight="Bold"/>
                <!--DataGridTextColumn Binding="{Binding Path=Data.MinHeight}" Header="Quantity" ElementStyle="{StaticResource QuantityStyle}"/-->
            </DataGrid.Columns>
        </DataGrid>


        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2">
            <Button  Name="btn2" Content="LoadMeasurements" Click="btn2_Click"  ></Button>
        </StackPanel>

        <ComboBox Name="cb"
                  Grid.Row="3"
                  Grid.Column="3"
                  Height="Auto"
                  Width="100"
   
                  IsEditable="True" VerticalAlignment="Top" SelectionChanged="cb_SelectionChanged"
                  />



        <DataGrid Name="DataGrid2" 
            SelectionMode="Single"
            IsReadOnly="True"
            Grid.Row="3"
            Grid.Column="2"
            Margin="10,10,10,10"
            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Data}" 
            ItemsSource="{Binding}"
            SelectedItem="{Binding SelectedBatch}"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            IsSynchronizedWithCurrentItem="True">
            <!--DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Item.Quantity, Converter={StaticResource QuantityToBackgroundConverter}}"></Setter>
                </Style>
            </-->

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="" CellTemplate="{StaticResource ResourceKey=ExpandDetails}" Width="30"></DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path=Data.Id}" Header="Id" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.ArticleId}" Header="ArticleID" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.ArticleName}" Header="ArticleName" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Path=Data.Date}" Header="Date" FontWeight="Bold"/>
            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border BorderThickness="2,0,0,0" Margin="30,0,0,0" Background="Orange" BorderBrush="Black">
                        <StackPanel>
                            <TextBlock Text="User Permission" Margin="5" />
                            <ListView ItemsSource="{Binding Permissions}" SelectionMode="Single" IsSynchronizedWithCurrentItem="True">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Module" DisplayMemberBinding="{Binding ModuleName}" />
                                        <GridViewColumn Header="Permission Level"  DisplayMemberBinding="{Binding PermissionLevel}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</Window>
